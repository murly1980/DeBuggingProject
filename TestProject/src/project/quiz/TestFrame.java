/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project.quiz;

import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JFrame;
import javax.swing.JRadioButton;

/**
 *
 * @author anuja
 */
public class TestFrame extends javax.swing.JFrame {

    /**
     * Creates new form Test
     */
     ArrayList<AnswerableQuestion> questionList;
     //String s;
    private  int score=0;
    int number;
     String rightOption;
    ResultSet resultSet;
   private int index=0;
  
    private int  numberOfQuestn;
    private ButtonGroup group;
     String selectedOption;
    private JRadioButton[] options = null;
    public TestFrame() {
        
            initComponents();
            setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            //Quiz quiz=new Quiz();
            
        //   numberOfQuestn = (Integer) numbrOfQuestion.getValue();
           System.out.println(numberOfQuestn+"  jjjjjjjjjjjj");
           // currentQuestionLabel.setText( "1/"+ numberOfQuestn);
           // setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            
            group = new ButtonGroup();
            group.add(option1RadioButton);
            group.add(option2RadioButton);
            group.add(option3RadioButton);
            group.add(option4RadioButton);
           
            
            options=new JRadioButton[]{option1RadioButton,option2RadioButton,option3RadioButton,option4RadioButton};
            
            
           
            
                } 

    TestFrame(int numberOfQuestn) {
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        this();
        currentQuestionLabel.setText( "1/"+ numberOfQuestn);
        this.numberOfQuestn=numberOfQuestn;
        questionList  = QuestionService.getQuestionsOfTest(numberOfQuestn);
           System.out.println("wwwwwwwwww"+questionList.size());
           for(Question questn:questionList)
           {
             System.out.println(questn.getQuestion());
             
           }
           
           
              AnswerableQuestion answerableQuestion =(AnswerableQuestion)questionList.get(index);
                
            
                   questnLabel.setText(answerableQuestion.getQuestion());
                    IDLabel.setText(String.valueOf(answerableQuestion.getQuestionId()));
                    option1RadioButton.setText(answerableQuestion.getOption1());
                    option1RadioButton.setActionCommand(answerableQuestion.getOption1());
                    option2RadioButton.setText(answerableQuestion.getOption2());
                    option2RadioButton.setActionCommand(answerableQuestion.getOption2());
                    option3RadioButton.setText(answerableQuestion.getOption3());
                    option3RadioButton.setActionCommand(answerableQuestion.getOption3());
                    option4RadioButton.setText(answerableQuestion.getOption4());
                    option4RadioButton.setActionCommand(answerableQuestion.getOption4());
                    selcetRightOption();
    }

            
         
            
        
        
    
     
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        option1Label = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        questionIDFld = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        buttonGroup1 = new javax.swing.ButtonGroup();
        questnLabel = new javax.swing.JLabel();
        questionIDLabel = new javax.swing.JLabel();
        firstBtn = new javax.swing.JButton();
        previousBtn = new javax.swing.JButton();
        forwardBtn = new javax.swing.JButton();
        lastBtn = new javax.swing.JButton();
        option1RadioButton = new javax.swing.JRadioButton();
        option2RadioButton = new javax.swing.JRadioButton();
        option3RadioButton = new javax.swing.JRadioButton();
        option4RadioButton = new javax.swing.JRadioButton();
        IDLabel = new javax.swing.JLabel();
        currentQuestionLabel = new javax.swing.JLabel();
        submitBtn = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        option1Label.setText("option1");

        jLabel2.setBackground(new java.awt.Color(51, 255, 255));
        jLabel2.setText("option2");

        jLabel3.setText("option3");

        jLabel4.setText("option4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        questnLabel.setBackground(new java.awt.Color(0, 0, 0));

        questionIDLabel.setText("Question ID");

        firstBtn.setText("|<");
        firstBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstBtnActionPerformed(evt);
            }
        });

        previousBtn.setText("<");
        previousBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousBtnActionPerformed(evt);
            }
        });

        forwardBtn.setText(">");
        forwardBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forwardBtnActionPerformed(evt);
            }
        });

        lastBtn.setText(">|");
        lastBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastBtnActionPerformed(evt);
            }
        });

        option1RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                option1RadioButtonActionPerformed(evt);
            }
        });

        option2RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                option2RadioButtonActionPerformed(evt);
            }
        });

        option3RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                option3RadioButtonActionPerformed(evt);
            }
        });

        option4RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                option4RadioButtonActionPerformed(evt);
            }
        });

        currentQuestionLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        submitBtn.setText("SUBMIT");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(firstBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(previousBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(questnLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 59, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(option4RadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(option3RadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(option2RadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(option1RadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(currentQuestionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(forwardBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)
                                        .addComponent(lastBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(questionIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(IDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(110, 110, 110)
                                        .addComponent(submitBtn)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(questionIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                        .addComponent(IDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(submitBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(questnLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(option1RadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(option2RadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(option3RadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(option4RadioButton)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(currentQuestionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(firstBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(previousBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lastBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(forwardBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void previousBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousBtnActionPerformed
      
        if(group.getSelection()!=null){
       selectedOption=group.getSelection().getActionCommand();
      System.out.println(selectedOption);
       }
        
        if(index!=0)
        {
            
        index--;
        //list2  = QuestionService.test(numberOfQuestn);
       AnswerableQuestion  question =(AnswerableQuestion)questionList.get(index);
        IDLabel.setText(String.valueOf(question.getQuestionId()));
                 currentQuestionLabel.setText(String.valueOf(index+1)+"/"+numberOfQuestn);
            System.out.println(question.getQuestion());
                   questnLabel.setText(question.getQuestion());
                    questionIDFld.setText(String.valueOf(question.getQuestionId()));
                    option1RadioButton.setText(question.getOption1());
                     option1RadioButton.setActionCommand(question.getOption1());
                    option2RadioButton.setText(question.getOption2());
                    option2RadioButton.setActionCommand(question.getOption2());
                    option3RadioButton.setText(question.getOption3());
                    option3RadioButton.setActionCommand(question.getOption3());
                    option4RadioButton.setText(question.getOption4());
                   option4RadioButton.setActionCommand(question.getOption4());
        }
        selcetRightOption();
    }//GEN-LAST:event_previousBtnActionPerformed

    private void forwardBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forwardBtnActionPerformed
       
        if(group.getSelection()!=null){
         selectedOption=group.getSelection().getActionCommand();
         System.out.println("Selected Option is"+selectedOption);
      }
         
          
        if(index!=questionList.size()-1)
        {
            
        index++;
       // list2  = QuestionService.test(numberOfQuestn);
        AnswerableQuestion question =(AnswerableQuestion)questionList.get(index);
         
        IDLabel.setText(String.valueOf(question.getQuestionId()));
        currentQuestionLabel.setText(String.valueOf(index+1)+"/"+numberOfQuestn);
       
                
            System.out.println(question.getQuestion());
                   questnLabel.setText(question.getQuestion());
                    questionIDFld.setText(String.valueOf(question.getQuestionId()));
                    option1RadioButton.setText(question.getOption1());
                    option1RadioButton.setActionCommand(question.getOption1());
                    option2RadioButton.setText(question.getOption2());
                     option2RadioButton.setActionCommand(question.getOption2());
                    option3RadioButton.setText(question.getOption3());
                     option3RadioButton.setActionCommand(question.getOption3());
                    option4RadioButton.setText(question.getOption4());
                     option4RadioButton.setActionCommand(question.getOption4());
        }
        selcetRightOption();
         
    }//GEN-LAST:event_forwardBtnActionPerformed

    private void lastBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastBtnActionPerformed
       
        if(group.getSelection()!=null){
         selectedOption=group.getSelection().getActionCommand(); 
        }
        
        currentQuestionLabel.setText( numberOfQuestn+"/"+ numberOfQuestn);
        index=questionList.size()-1;
       AnswerableQuestion question =(AnswerableQuestion)questionList.get(index);
        IDLabel.setText(String.valueOf(question.getQuestionId()));
       
                
            System.out.println(question.getQuestion());
                   questnLabel.setText(question.getQuestion());
                    questionIDFld.setText(String.valueOf(question.getQuestionId()));
                    option1RadioButton.setText(question.getOption1());
                    option1RadioButton.setActionCommand(question.getOption1());
                    option2RadioButton.setText(question.getOption2());
                    option2RadioButton.setActionCommand(question.getOption2());
                    option3RadioButton.setText(question.getOption3());
                    option3RadioButton.setActionCommand(question.getOption3());
                    option4RadioButton.setText(question.getOption4());
                    option4RadioButton.setActionCommand(question.getOption4());
                    selcetRightOption();
    }//GEN-LAST:event_lastBtnActionPerformed

    private void firstBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstBtnActionPerformed
  
        if(group.getSelection()!=null){
         selectedOption=group.getSelection().getActionCommand(); 
 }
       
        currentQuestionLabel.setText( "1/"+ numberOfQuestn);
        index=0;
       AnswerableQuestion question =(AnswerableQuestion)questionList.get(index);
        IDLabel.setText(String.valueOf(question.getQuestionId()));
       
                
            System.out.println(question.getQuestion());
                   questnLabel.setText(question.getQuestion());
                    questionIDFld.setText(String.valueOf(question.getQuestionId()));
                    option1RadioButton.setText(question.getOption1());
                    option2RadioButton.setText(question.getOption2());
                    
                    option3RadioButton.setText(question.getOption3());
                    option4RadioButton.setText(question.getOption4());
                    selcetRightOption();
    }//GEN-LAST:event_firstBtnActionPerformed

    private void option2RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_option2RadioButtonActionPerformed
         selectRightOption(evt);
    }//GEN-LAST:event_option2RadioButtonActionPerformed

    private void option4RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_option4RadioButtonActionPerformed
         selectRightOption(evt);
    }//GEN-LAST:event_option4RadioButtonActionPerformed

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
       // System.out.println(s);
      //AnswerableQuestion question=new AnswerableQuestion();
         MarksDisplayFrame marks=new MarksDisplayFrame(questionList);
         
       
           
      //  } 
        
         
    }//GEN-LAST:event_submitBtnActionPerformed

    private void option1RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_option1RadioButtonActionPerformed
        // TODO add your handling code here:
        selectRightOption(evt);
    }//GEN-LAST:event_option1RadioButtonActionPerformed

    private void option3RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_option3RadioButtonActionPerformed
         selectRightOption(evt);
    }//GEN-LAST:event_option3RadioButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel IDLabel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel currentQuestionLabel;
    private javax.swing.JButton firstBtn;
    private javax.swing.JButton forwardBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton lastBtn;
    private javax.swing.JLabel option1Label;
    public javax.swing.JRadioButton option1RadioButton;
    public javax.swing.JRadioButton option2RadioButton;
    public javax.swing.JRadioButton option3RadioButton;
    public javax.swing.JRadioButton option4RadioButton;
    private javax.swing.JButton previousBtn;
    private javax.swing.JTextField questionIDFld;
    private javax.swing.JLabel questionIDLabel;
    private javax.swing.JLabel questnLabel;
    private javax.swing.JButton submitBtn;
    // End of variables declaration//GEN-END:variables

    private void selectRightOption(ActionEvent evt) {
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
   
     if( evt.getSource() instanceof JRadioButton)
    {
        JRadioButton optionBtn=(JRadioButton)evt.getSource();
        System.out.println(evt.getActionCommand()+"==="+optionBtn.isSelected());
        AnswerableQuestion question = questionList.get(index);
        question.setUserSelectedAnswer(evt.getActionCommand());
        System.out.println("User selected anser is"+question.getUserSelectedAnswer());
        //AnswerableQuestion answerableQuestion=new AnswerableQuestion();
        QuestionService.getFinalScore(question);
       
           
        question.setQuestionId(Integer.parseInt(IDLabel.getText()));
       //number= QuestionService.getFinalScore(question);
      // System.out.println("mmmmm"+number);
       
       
    }
    
    }

    private void selcetRightOption() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        group.clearSelection();
       System.out.println("!!!!!&&&&&&");
        for(JRadioButton option:options){
           option.setSelected(false);
            String answer = questionList.get(index).getUserSelectedAnswer();
            if(answer!=null && answer.equals(option.getText()))
            {
                option.setSelected(true);
            }
        }
    }
}
