/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package testproject;

import java.awt.Image;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author anuja
 */
public class ImageSlideShow extends javax.swing.JFrame implements Runnable{

     volatile int i=0;
    File[] allFiles;
    //int j;
    int c=0; 
    volatile ImageIcon[] scaledIcon=null;
    File folder;
    int p;
    Thread myThread=null;
    public ImageSlideShow() {
        initComponents();
        
    }
   
        
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pathFld = new javax.swing.JTextField();
        folderChooseBtn = new javax.swing.JButton();
        imageDisplayLabel = new javax.swing.JLabel();
        firstImageBtn = new javax.swing.JButton();
        previousImageBtn = new javax.swing.JButton();
        forwardImageBtn = new javax.swing.JButton();
        lastImageBtn = new javax.swing.JButton();
        startStopBtn = new javax.swing.JButton();
        imageNameFld = new javax.swing.JTextField();
        imageNumberFld = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pathFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathFldActionPerformed(evt);
            }
        });

        folderChooseBtn.setText("...");
        folderChooseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                folderChooseBtnActionPerformed(evt);
            }
        });

        firstImageBtn.setText("|<");
        firstImageBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstImageBtnActionPerformed(evt);
            }
        });

        previousImageBtn.setText("<");
        previousImageBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousImageBtnActionPerformed(evt);
            }
        });

        forwardImageBtn.setText(">");
        forwardImageBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forwardImageBtnActionPerformed(evt);
            }
        });

        lastImageBtn.setText(">|");
        lastImageBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastImageBtnActionPerformed(evt);
            }
        });

        startStopBtn.setText("START");
        startStopBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startStopBtnMouseClicked(evt);
            }
        });
        startStopBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startStopBtnActionPerformed(evt);
            }
        });

        imageNameFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageNameFldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(imageDisplayLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pathFld, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(folderChooseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(startStopBtn)
                            .addComponent(imageNameFld, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                            .addComponent(imageNumberFld))
                        .addGap(26, 26, 26))))
            .addGroup(layout.createSequentialGroup()
                .addComponent(firstImageBtn)
                .addGap(18, 18, 18)
                .addComponent(previousImageBtn)
                .addGap(18, 18, 18)
                .addComponent(forwardImageBtn)
                .addGap(18, 18, 18)
                .addComponent(lastImageBtn)
                .addGap(0, 174, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pathFld, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(folderChooseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(imageDisplayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(startStopBtn)
                        .addGap(18, 18, 18)
                        .addComponent(imageNameFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(imageNumberFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstImageBtn)
                    .addComponent(previousImageBtn)
                    .addComponent(forwardImageBtn)
                    .addComponent(lastImageBtn))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pathFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pathFldActionPerformed

    private void startStopBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startStopBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startStopBtnActionPerformed

    private void imageNameFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageNameFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_imageNameFldActionPerformed

    private void folderChooseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_folderChooseBtnActionPerformed
          
        FileNameExtensionFilter fnef=new FileNameExtensionFilter("IMAGES","png","jpg","jpeg");
        JFileChooser chooser=new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.addChoosableFileFilter(fnef);
        chooser.showOpenDialog(null);
          folder=chooser.getSelectedFile();
          if(folder!=null)
          {
       if(folder.isDirectory())
       {
            allFiles=folder.listFiles();
          
            String fileName=folder.getAbsolutePath();
             pathFld.setText(fileName);
             scaledIcon=new ImageIcon[allFiles.length];
            
                     for(int l=0;l<=scaledIcon.length-1;l++)
                     {
                         ImageIcon icon=new ImageIcon(allFiles[l].getAbsolutePath());
                         Image img=icon.getImage();
                         Image imgScale=img.getScaledInstance(imageDisplayLabel.getWidth(), imageDisplayLabel.getHeight(),Image.SCALE_SMOOTH);
                         scaledIcon[l]=new ImageIcon(imgScale);
                         

                     }
                   //  imageDisplayFile(allFiles[i]);
                      imageDisplayLabel.setIcon(scaledIcon[i]); 
                    }
       }
            
            imageNumberFld.setText("1/"+scaledIcon.length);
            imageNameFld.setText(allFiles[0].getName());
            
                    
       
       
        
    
    }//GEN-LAST:event_folderChooseBtnActionPerformed


    private void lastImageBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastImageBtnActionPerformed
          imageDisplayLabel.setIcon(scaledIcon[scaledIcon.length-1]); 
          imageNumberFld.setText(scaledIcon.length+"/"+scaledIcon.length);
          imageNameFld.setText(allFiles[allFiles.length-1].getName());
    }//GEN-LAST:event_lastImageBtnActionPerformed

    private void forwardImageBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forwardImageBtnActionPerformed
         if(i!=allFiles.length-1)
        {   
                  i++;
                   imageDisplayLabel.setIcon(scaledIcon[i]);
                     imageNumberFld.setText(i+1+"/"+scaledIcon.length);
                     imageNameFld.setText(allFiles[i].getName());
        }
    }//GEN-LAST:event_forwardImageBtnActionPerformed

    private void previousImageBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousImageBtnActionPerformed
          if(i!=0)
        {
              i--;
              imageDisplayLabel.setIcon(scaledIcon[i]);
                imageNumberFld.setText(i+1+"/"+scaledIcon.length);
                imageNameFld.setText(allFiles[i].getName());
        }
      
    }//GEN-LAST:event_previousImageBtnActionPerformed

    private void firstImageBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstImageBtnActionPerformed
       imageDisplayLabel.setIcon(scaledIcon[0]); 
         imageNumberFld.setText("1/"+scaledIcon.length);
         imageNameFld.setText(allFiles[0].getName());
    }//GEN-LAST:event_firstImageBtnActionPerformed

    private void startStopBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startStopBtnMouseClicked
         if( startStopBtn.getText().equals("START"))
         {
            startStopBtn.setText("STOP");
         //  ImageSlideShow show=new ImageSlideShow();
            if(myThread==null){
             myThread=new Thread(this);
            myThread.start();
            }
        
         }else
             startStopBtn.setText("START");
         
    }//GEN-LAST:event_startStopBtnMouseClicked

     public void run(){
         
         while(true)
         {
         
             System.out.println("================");
           if(!startStopBtn.getText().equals("START"))
           {
                if(i>=scaledIcon.length) // i=p;
              {
                    i=0;
                     
                }
                System.out.println("#################");
            imageDisplayLabel.setIcon(scaledIcon[i]);
           
            imageNameFld.setText(allFiles[i].getName());
            imageNumberFld.setText(i+1+"/"+scaledIcon.length);
              
            
            i++;
             
            try{
            myThread.sleep(1000);
            }catch(InterruptedException e)
            {
                
            }
              
           }
         }
     }
   
    public static void main(String args[]) {
       
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImageSlideShow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImageSlideShow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImageSlideShow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImageSlideShow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImageSlideShow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton firstImageBtn;
    private javax.swing.JButton folderChooseBtn;
    private javax.swing.JButton forwardImageBtn;
    private javax.swing.JLabel imageDisplayLabel;
    private javax.swing.JTextField imageNameFld;
    private javax.swing.JTextField imageNumberFld;
    private javax.swing.JButton lastImageBtn;
    private javax.swing.JTextField pathFld;
    private javax.swing.JButton previousImageBtn;
    private javax.swing.JButton startStopBtn;
    // End of variables declaration//GEN-END:variables

}